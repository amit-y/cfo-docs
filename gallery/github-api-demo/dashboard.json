{"cards":[{"code":"{{~query1 :lang}}\n  <a \n    href=\"#\" \n    class=\"u-unstyledLink {{? lang === query2}}selected{{?}}\">\n      <img \n        class=\"lang-selector\" \n        data-lingo=\"{{=lang}}\" \n        src=\"https://cdn.jsdelivr.net/npm/programming-languages-logos/src/{{=lang}}/{{=lang}}.png\"/>\n  </a>\n{{~}}\n\n\n","name":"card1","style":".container.grid {\n  grid-row-gap: 1em;\n}\n\n.card.card1 {\n  display: flex;\n  justify-content: space-evenly;\n}\n\n.card1 a img {\n  height: 25px;\n  filter: grayscale(100%);\n  transition: filter 200ms;\n}\n\n.card1 a.selected img, .card1 a:hover img {\n  filter: grayscale(0);\n}\n\n\n"},{"name":"card2","code":"{{~query3 :row:index}}\n  <div class=\"row\" style=\"animation-delay: {{= 100 * (index+1)}}ms\">\n    <a href=\"{{=row.url}}\" target=\"_blank\" class=\"u-unstyledLink repo\">{{=row.name}}</a>\n    <span class=\"stars\">⭐️ {{=row.stars}}</span>\n  </div>\n{{~}}","style":".card.card2 {\n  background: transparent;\n  box-shadow: none;\n  margin-bottom: 60px;\n}\n\n.card2 .row {\n  position: relative;\n  margin-bottom: 2em;\n  animation: fadeInTable 0.5s linear;\n  animation-fill-mode: both;\n}\n\n.card2 .row .repo {\n  font-weight: 700;\n  border: 2px solid #2d3443;\n  border-radius: 5px;\n  padding: 6px 20px;\n  color: #2d3443;\n  text-decoration: none;\n  transition: all .3s;\n}\n\n.card2 .row .repo:hover {\n  background-color: #2d3443;\n  color: #fff;\n  box-shadow: 0 6px 5px rgba(0, 0, 0, 0.3);\n}\n\n\n.card2 .row .stars {\n  font-family: monospace;\n  color: #2d3443;\n  margin-left: .5em;\n}\n\n@keyframes fadeInTable {\n  0% {\n    opacity: 0;\n    left: -100px;\n  }\n  75% {\n    opacity: 0.5;\n    left: 0px;\n  }\n  100% {\n    opacity: 1;\n  }\n}"},{"name":"card3","code":"<div class=\"title\">GitHub API Demo</div>\n<div class=\"content\">\n<p>This sample uses the <a class=\"u-unstyledLink\" href=\"https://docs.github.com/en/free-pro-team@latest/rest/reference/search\" target=\"_blank\">GitHub Search API</a> to return the top 10 starred repositories for a language.</p>\n<p>The list of languages are a javascript array in <code>query1</code> which are displayed in <code>card1</code>.</p> \n<p>The refresh interval for this sample is set to <code>manual</code>. An <code>on click</code> event handler is defined in <code>script1</code>. The event handler stores the language for the clicked logo in a global variable, and triggers a refresh of the data.</p>\n<p>On refresh, the selected language is stored in <code>query2</code>. The language is passed as a parameter to the API in <code>query3</code>.</p>\n<p>The selected language in <code>query2</code> is also used to highlight the logo for the selected language.</p>\n<pre>\n&lt;a href=\"#\" class=\"u-unstyledLink <span class=\"dot\">&#123;&#123;? lang === query2&#125;&#125;</span>selected<span class=\"dot\">&#123;&#123;?&#125;&#125;</span>\"&gt;\n  &lt;LANGUAGE_LOGO_IMAGE&gt;\n&lt;/a&gt;\n</pre>\n<p>This sample uses a <code>grid</code> layout. Styles for the grid can be included within the CSS of any one of the cards.</p>\n<pre>\n.container.grid {\n  grid-row-gap: 1em;\n}\n</pre> \n<p>When using event handlers, add an event handler for the <code>dashboardclosed</code> event and remove all event handlers that were added.</p>\n<!--<p>The language logos are from <a class=\"u-unstyledLink\" href=\"https://github.com/abranhe/programming-languages-logos\" target=\"_blank\">Programming Languages Logos</a> by <a class=\"u-unstyledLink\" href=\"https://github.com/abranhe\" target=\"_blank\">abranhe</a></p>-->\n</div>","style":".card.card3 {\n  position: fixed !important;\n  border: 2px solid #111;\n  left: auto !important;\n  top: auto !important;\n  right: 10%;\n  bottom: 10%;\n  max-width: 30%;\n  background: linear-gradient(90deg, #fff 9px, transparent 1%) center, linear-gradient(#fff 9px, transparent 1%) center, #ccc;\n  background-size: 10px 10px;\n  box-shadow: 1px 1px #ccc, 2px 2px #ccc, 3px 3px #ccc;\n  padding: 0;\n}\n\n.card3 .title {\n  font: 2em 'Caveat', cursive;\n  padding: .3em .3em .1em;\n  border-bottom: 2px solid #111;\n}\n\n.card3 .content {\n  font-family: Menlo, Consolas, monospace;\n  padding: .5em;\n  line-height: 1.2;\n}\n\n.card3 .content p, .card3 .content pre {\n  margin-bottom: 1em;\n}\n\n.card3 .content pre {\n  background-color: #f2f2f2;\n  color: #ef5777;\n  white-space: normal;\n  padding: .25em .5em;\n  line-height: 1.25em;\n  border-radius: .25em;\n}\n\n.card3 .content p code {\n  background-color: #f2f2f2;\n  border-radius: .25em;\n  padding: 0 0.2em;\n  vertical-align: baseline;\n  color: #ef5777;\n}\n\n.card3 .content pre .dot {\n  color: #8a7bff;\n}"}],"queries":[{"accountId":630060,"flow":[{"accountId":630060,"text":"[\n  'javascript', \n  'python', \n  'java', \n  'php', \n  'csharp', \n  'cpp', \n  'go', \n  'c', \n  'r', \n  'ruby', \n  'kotlin', \n  'swift', \n  'html', \n  'css', \n  'typescript', \n  'lua'\n]","type":"vars"}],"name":"query1"},{"accountId":630060,"flow":[{"accountId":630060,"text":"window.lang || 'javascript'","type":"vars"}],"name":"query2"},{"accountId":630060,"flow":[{"accountId":630060,"text":"previousResults.query2","type":"vars"},{"accountId":630060,"text":"{\n  url: `https://api.github.com/search/repositories?sort=stars&order=desc&per_page=10&q=language:${currentResult}`,\n  responseType: 'json'\n}","type":"api"},{"accountId":630060,"text":"currentResult && 'items' in currentResult \n  ? currentResult.items.map(item => ({name: item.name, url: item.html_url, stars: item.stargazers_count})) \n  : []","type":"vars"}],"name":"query3"}],"scripts":[{"name":"script1","script":"{\n\n  function clickHandler(event) {\n    const el = event.target;\n    if (!el || !el.classList || !el.classList.contains('lang-selector')) return;\n\n    event.preventDefault();\n    window.lang = el.dataset.lingo;\n    window.postMessage('refresh-data')\n  }\n\n  function removeHandlers() {\n    document.querySelector('.card1').removeEventListener('click', clickHandler, false);\n    document.removeEventListener('dashboardclosed', removeHandlers);\n  }\n\n  document.querySelector('.card1').addEventListener('click', clickHandler, false);\n  document.addEventListener('dashboardclosed', removeHandlers);\n}","url":""}]}
