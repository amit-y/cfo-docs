{"cards":[{"code":"{{~query1 :device:index}}\n  <div class=\"name\">{{=device.type}}</div>\n  <div class=\"graph idx{{=index}}\"></div>\n  <div class=\"value\">{{=device.count}}%</div>\n{{~}}\n","name":"card1","style":".card.card1 {\n  display: grid;\n  grid-template-columns: max-content 1fr max-content;\n}\n\n.card1 .name, .card1 .value {\n  padding: 1em;\n}\n\n.card1 .name {\n  border-right: 1px solid #000;\n}\n\n.card1 .graph {\n  background: linear-gradient(to right, #1D6EA9 0%, #3ADEE8 100%);\n  margin: .5em 0;\n}\n\n/*animation css*/\n{{~query1 :device:index}} \n  @keyframes grow{{=index}} {\n    from { width: 0; }\n    to   { width: {{=device.count}}%; }\n  }\n\n  .card1 .graph.idx{{=index}} {\n    animation: grow{{=index}} 1s ease-out;\n    animation-fill-mode: forwards;\n  }\n{{~}} \n/*end animation css*/\n"},{"code":"<div class=\"title\">Bar Graph Using CSS Demo</div>\n<div class=\"content\">\n<p>Creating a bar graph is fairly easy using CSS. This demo's data comes from <code>query1</code> which returns an array of device types with random values for each.</p>\n<p>In the card, we loop through the results and display the information. For the bar, we create an empty div. We loop through the data again in the CSS and animate the empty div's width.</p>\n<p>If you prefer not to animate the charts, you can remove the animation code from the card's CSS, and update line 2 in the card's HTML to:</p>\n<pre>\n&lt;div class=\"graph\" style=\"width: <span class=\"dot\">&#123;&#123;=device.count&#125;&#125;</span>%\"&gt;&lt;/div&gt;\n</pre>\n\n</div>","name":"card2","style":".card.card2 {\n  position: fixed;\n  background: transparent;\n  box-shadow: none;\n  border: 2px solid #111;\n  left: auto !important;\n  top: auto !important;\n  right: 10%;\n  bottom: 10%;\n  max-width: 30%;\n  background: linear-gradient(90deg, #fff 9px, transparent 1%) center, linear-gradient(#fff 9px, transparent 1%) center, #ccc;\n  background-size: 10px 10px;\n  box-shadow: 1px 1px #ccc, 2px 2px #ccc, 3px 3px #ccc;\n  padding: 0;\n}\n\n.card2 .title {\n  font: 2em 'Caveat', cursive;\n  padding: .3em .3em .1em;\n  border-bottom: 2px solid #111;\n}\n\n.card2 .content {\n  font-family: Menlo, Consolas, monospace;\n  padding: .5em;\n  line-height: 1.2;\n}\n\n.card2 .content p, .card2 .content pre {\n  margin-bottom: 1em;\n}\n\n.card2 .content pre {\n  background-color: #f2f2f2;\n  color: #ef5777;\n  white-space: normal;\n  padding: .25em .5em;\n  line-height: 1.25em;\n  border-radius: .25em;\n}\n\n.card2 .content p code {\n  background-color: #f2f2f2;\n  border-radius: .25em;\n  padding: 0 0.2em;\n  vertical-align: baseline;\n  color: #ef5777;\n}\n\n.card2 .content pre .dot {\n  color: #8a7bff;\n}\n\n.card2 .content a {\n  color: #3867d6;\n}"}],"queries":[{"accountId":630060,"flow":[{"accountId":630060,"text":"[\n  {type: 'Desktop', count: Math.floor(Math.random()*40)},\n  {type: 'Mobile', count: Math.floor(Math.random()*40)},\n  {type: 'Tablet', count: Math.floor(Math.random()*20)},\n  {type: 'Unknown', count: 100}\n]","type":"vars"},{"accountId":630060,"text":"if (currentValue.type !== 'Unknown') \n  array[3].count = array[3].count - currentValue.count;\nreturn currentValue;\n","type":"map"}],"name":"query1"}],"scripts":[]}
