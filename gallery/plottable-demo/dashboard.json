{"cards":[{"code":"<svg id=\"chart1\" width=\"100%\" height=\"100%\"></svg>","name":"card1","style":"@import url('https://cdn.jsdelivr.net/npm/plottable@2.9.1/plottable.css');\n\n.card.card1 {\n  height: 50vw;\n  max-height: 500px;\n  width: 40vw;\n}"},{"name":"card2","code":"<div class=\"title\">Plottable Demo</div>\n<div class=\"content\">\n<p>This sample uses a 3rd party charting library - <a class=\"u-unstyledLink\" \n href=\"http://plottablejs.org/\" target=\"_blank\">Plottable</a>.</p>\n<p>The heavy lifting is done in <code>script1</code> which loads the Plottable library. The code in <code>script1</code> sets up the chart. The code only executes once the library has loaded.</p>\n<p>The event listener for the <code>datarefreshed</code> custom event updates the data for the chart every time <code>query1</code> is refreshed.</p>\n<p>When using event handlers, add an event handler for the <code>dashboardclosed</code> event and remove all event handlers that were added.</p>\n</div>","style":".card.card2 {\n  position: fixed;\n  background: transparent;\n  box-shadow: none;\n  border: 2px solid #111;\n  left: auto !important;\n  top: auto !important;\n  right: 10%;\n  bottom: 10%;\n  max-width: 30%;\n  background: linear-gradient(90deg, #fff 9px, transparent 1%) center, linear-gradient(#fff 9px, transparent 1%) center, #ccc;\n  background-size: 10px 10px;\n  box-shadow: 1px 1px #ccc, 2px 2px #ccc, 3px 3px #ccc;\n  padding: 0;\n}\n\n.card2 .title {\n  font: 2em 'Caveat', cursive;\n  padding: .3em .3em .1em;\n  border-bottom: 2px solid #111;\n}\n\n.card2 .content {\n  font-family: Menlo, Consolas, monospace;\n  padding: .5em;\n  line-height: 1.2;\n}\n\n.card2 .content p, .card2 .content pre {\n  margin-bottom: 1em;\n}\n\n.card2 .content pre {\n  background-color: #f2f2f2;\n  color: #ef5777;\n  white-space: normal;\n  padding: .25em .5em;\n  line-height: 1.25em;\n  border-radius: .25em;\n}\n\n.card2 .content p code {\n  background-color: #f2f2f2;\n  border-radius: .25em;\n  padding: 0 0.2em;\n  vertical-align: baseline;\n  color: #ef5777;\n}\n\n.card2 .content pre .dot {\n  color: #8a7bff;\n}\n\n.card2 .content a {\n  color: #3867d6;\n}"}],"queries":[{"accountId":630060,"flow":[{"accountId":630060,"text":"[\n  { x: 0, y: Math.floor(Math.random()*100) },\n  { x: 1, y: Math.floor(Math.random()*100) },\n  { x: 2, y: Math.floor(Math.random()*100) },\n  { x: 3, y: Math.floor(Math.random()*100) },\n  { x: 4, y: Math.floor(Math.random()*100) },\n  { x: 5, y: Math.floor(Math.random()*100) },\n  { x: 6, y: Math.floor(Math.random()*100) },\n  { x: 7, y: Math.floor(Math.random()*100) },\n  { x: 8, y: Math.floor(Math.random()*100) },\n  { x: 9, y: Math.floor(Math.random()*100) }\n]","type":"vars"}],"name":"query1"}],"scripts":[{"name":"script1","script":"const xScale = new Plottable.Scales.Linear();\nconst yScale = new Plottable.Scales.Linear();\n\nconst xAxis = new Plottable.Axes.Numeric(xScale, \"bottom\");\nconst yAxis = new Plottable.Axes.Numeric(yScale, \"left\");\n\nconst plot = new Plottable.Plots.Line();\nplot.x(function(d) { return d.x; }, xScale);\nplot.y(function(d) { return d.y; }, yScale);\n\nconst dataset = new Plottable.Dataset([]);\nplot.addDataset(dataset);\n\nconst chart = new Plottable.Components.Table([\n  [yAxis, plot],\n  [null, xAxis]\n]);\n\nchart.renderTo(\"svg#chart1\");\n\nfunction refreshHandler(event) {\n  const data = event.detail.query1;\n  dataset.data(data);\n}\n\nfunction removeHandlers() {\n  document.removeEventListener('datarefreshed', refreshHandler);\n  document.removeEventListener('dashboardclosed', removeHandlers);\n}\n\ndocument.addEventListener('datarefreshed', refreshHandler);\ndocument.addEventListener('dashboardclosed', removeHandlers);\n\nwindow.postMessage('refresh-data');","url":"https://cdn.jsdelivr.net/npm/plottable@2.9.1/plottable.min.js"}]}
